FROM golang:1.21 as build

RUN apt-get update -y && apt-get install -y build-essential wget unzip curl

RUN curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v27.2/protoc-27.2-linux-x86_64.zip &&     unzip protoc-27.2-linux-x86_64.zip -d protoc3 &&     mv protoc3/bin/* /usr/local/bin/ &&     mv protoc3/include/* /usr/local/include/


ENV GO111MODULE=on

WORKDIR /app

ADD . /app

RUN go mod download

RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.4.0 
RUN go install github.com/golang/protobuf/protoc-gen-go@v1.5.4

RUN /usr/local/bin/protoc --go_out=. --go_opt=paths=source_relative --go-grpc_opt=require_unimplemented_servers=false --go-grpc_out=. --go-grpc_opt=paths=source_relative src/echo/echo.proto


#RUN GRPC_HEALTH_PROBE_VERSION=v0.2.0 && \
#    wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 && \
#    chmod +x /bin/grpc_health_probe

RUN export GOBIN=/app/bin && go install src/grpc_server.go
RUN export GOBIN=/app/bin && go install src/grpc_client.go

FROM gcr.io/distroless/base-debian12
COPY --from=build /app/server_crt.pem /
COPY --from=build /app/server_key.pem /
COPY --from=build /app/CA_crt.pem /
COPY --from=build /app/bin /

EXPOSE 8080

ENTRYPOINT ["/grpc_server", "--grpcport=:8080", "--targetAudience=https://not-used-uc.a.run.app", "--usetls=false", "--validateToken=false"]
